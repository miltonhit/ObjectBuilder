<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2014-2022 Object Builder <https://github.com/ottools/ObjectBuilder>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="23"
                   minHeight="23"
                   creationComplete="creationCompleteHandler(event)">

    <!-- host component -->
    <fx:Metadata>
        <![CDATA[[HostComponent("spark.components.Button")]]]>
    </fx:Metadata>

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.resources.IResourceManager;
			import mx.resources.ResourceManager;

			import spark.components.Button;

			import otlib.components.FrameSpriteGroup;
			import otlib.core.otlib_internal;
			import otlib.events.FrameSpriteGroupEvent;

			use namespace otlib_internal;

			//--------------------------------------------------------------------------
			// METHODS
			//--------------------------------------------------------------------------

			//--------------------------------------
			// Event Handlers
			//--------------------------------------

			private function creationCompleteHandler(event:FlexEvent):void
			{
				if (owner is Button) {
					var cm:ContextMenu = createContextMenu();
					cm.addEventListener(Event.SELECT, contextMenuSelectHandler);
					cm.addEventListener(Event.DISPLAYING, contextMenuDisplayingHandler);
					Button(owner).contextMenu = cm;
				}
			}

			private function contextMenuDisplayingHandler(event:Event):void
			{
				if (owner is Button) {
					var parent:DisplayObjectContainer = Button(owner).parent;
					if (parent && parent is FrameSpriteGroup) {
						FrameSpriteGroup(parent).onContextMenuDisplaying(Button(owner), ContextMenu(event.target));
					}
				}
			}

			private function contextMenuSelectHandler(event:Event):void
			{
				if (owner is Button) {
					var parent:DisplayObjectContainer = Button(owner).parent;
					if (parent && parent is FrameSpriteGroup) {
						var type:String = NativeMenuItem(event.target).data as String;
						FrameSpriteGroup(parent).onContextMenuSelect(Button(owner), type);
					}
				}
			}

			//--------------------------------------------------------------------------
			// STATIC
			//--------------------------------------------------------------------------

			private static function createContextMenu():ContextMenu
			{
				var resource:IResourceManager = ResourceManager.getInstance();
				var clearSpriteMenu:ContextMenuItem = new ContextMenuItem("Clear Sprite");
				clearSpriteMenu.data = FrameSpriteGroupEvent.CLEAR_SPRITE;
				var copyFrameMenu:ContextMenuItem = new ContextMenuItem("Copy Frame", true);
				copyFrameMenu.data = FrameSpriteGroupEvent.COPY_FRAME;
				var pasteFrameMenu:ContextMenuItem = new ContextMenuItem("Paste Frame");
				pasteFrameMenu.data = FrameSpriteGroupEvent.PASTE_FRAME;
				var clearFrameMenu:ContextMenuItem = new ContextMenuItem("Clear Frame");
				clearFrameMenu.data = FrameSpriteGroupEvent.CLEAR_FRAME;
				var menu:ContextMenu = new ContextMenu();
				menu.customItems = [clearSpriteMenu, copyFrameMenu, pasteFrameMenu, clearFrameMenu];
				return menu;
			}

		]]>
	</fx:Script>

    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>

    <!-- fill/border -->
    <s:Rect left="0" right="0" top="0" bottom="0">
        <s:fill>
            <s:SolidColor color="0xFFFFFF" alpha="0"/>
        </s:fill>
        <s:stroke>
            <s:SolidColorStroke color="0xFF00FF" weight="0.1"/>
        </s:stroke>
    </s:Rect>
</s:SparkButtonSkin>
